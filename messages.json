const fs = require("fs");
const express = require("express");
const crypto = require("crypto");

const app = express();
app.use(express.json());

const FILE_PATH = "chat_messages.json";

// ランダムなユーザー名を生成する関数
function generateUsername() {
  return "@user" + crypto.randomInt(1000, 9999); // 例: @user4567
}

// メッセージを保存する関数
function saveMessage(message) {
  let messages = [];

  if (fs.existsSync(FILE_PATH)) {
    messages = JSON.parse(fs.readFileSync(FILE_PATH, "utf-8"));
  }

  const username = generateUsername(); // ランダムなユーザー名を取得

  messages.push({ user: username, text: message, timestamp: new Date().toISOString() });

  fs.writeFileSync(FILE_PATH, JSON.stringify(messages, null, 2));
}

// メッセージ送信API
app.post("/send-message", (req, res) => {
  const { message } = req.body;
  if (!message) {
    return res.status(400).json({ error: "Message cannot be empty!" });
  }

  saveMessage(message);
  res.status(200).json({ success: true, message: "Message saved with random username!" });
});

// メッセージ取得API
app.get("/messages", (req, res) => {
  if (!fs.existsSync(FILE_PATH)) {
    return res.json([]);
  }

  const messages = JSON.parse(fs.readFileSync(FILE_PATH, "utf-8"));
  res.json(messages);
});

// サーバー起動
const PORT = 3000;
app.listen(PORT, () => {
  console.log(`Server is running on http://localhost:${PORT}`);
});
